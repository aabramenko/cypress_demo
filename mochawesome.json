{
  "stats": {
    "suites": 2,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2021-08-04T14:29:44.999Z",
    "end": "2021-08-04T14:29:59.524Z",
    "duration": 27050,
    "testsRegistered": 6,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "2c763025-28eb-4a44-8c58-696d0215133f",
      "title": "",
      "fullFile": "cypress/integration/compareRateFromGoogleAndBank2.spec.js",
      "file": "cypress/integration/compareRateFromGoogleAndBank2.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "001887ca-1625-4896-b3d8-1a5e9dd6200f",
          "title": "google a currency rate and compare with rate from the bank of Canada [2]",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "from CAD to AUD",
              "fullTitle": "google a currency rate and compare with rate from the bank of Canada [2] from CAD to AUD",
              "timedOut": null,
              "duration": 6162,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_GooglePage.onGooglePage.search(\"rate \" + currencyFrom + \" to \" + currencyTo);\n_GooglePage.onGooglePage.getCurrencyConverterArea().should('be.visible');\n_GooglePage.onGooglePage.getCurrencyConverterArea().find('div').eq(2).find('span').eq(0).then(rateFromGoogle => {\n  cy.log('rate from Google: ' + currencyFrom + \" to \" + currencyTo + \": \" + rateFromGoogle.text());\n  cy.request('GET', Cypress.env('rateAPI').replace(\"{FROMTO}\", currencyFrom + currencyTo)).then(response => {\n    expect(response.status).to.eq(200);\n    var len = response.body.observations.length;\n    var rateFromBank = response.body.observations[len - 1]['FX' + currencyFrom + currencyTo].v;\n    cy.log(\"rate from bank: \" + currencyFrom + \" to \" + currencyTo + \": \" + rateFromBank);\n    rateFromBank = parseFloat(rateFromBank.replace(\",\", \".\"));\n    rateFromGoogle = parseFloat(rateFromGoogle.text().replace(\",\", \".\"));\n    var diff = Math.abs(rateFromBank - rateFromGoogle);\n    var diffPerc = diff * 100.0 / Math.max(rateFromBank, rateFromGoogle);\n    cy.log(\"Difference for \" + currencyFrom + \" to \" + currencyTo + \" is \" + diff + \", what is \" + diffPerc + \"%\");\n    expect(diffPerc).to.be.lessThan(1);\n  });\n});",
              "err": {},
              "uuid": "075f760b-b0f3-4866-8686-68905cfbe06a",
              "parentUUID": "001887ca-1625-4896-b3d8-1a5e9dd6200f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "from CAD to BRL",
              "fullTitle": "google a currency rate and compare with rate from the bank of Canada [2] from CAD to BRL",
              "timedOut": null,
              "duration": 3772,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_GooglePage.onGooglePage.search(\"rate \" + currencyFrom + \" to \" + currencyTo);\n_GooglePage.onGooglePage.getCurrencyConverterArea().should('be.visible');\n_GooglePage.onGooglePage.getCurrencyConverterArea().find('div').eq(2).find('span').eq(0).then(rateFromGoogle => {\n  cy.log('rate from Google: ' + currencyFrom + \" to \" + currencyTo + \": \" + rateFromGoogle.text());\n  cy.request('GET', Cypress.env('rateAPI').replace(\"{FROMTO}\", currencyFrom + currencyTo)).then(response => {\n    expect(response.status).to.eq(200);\n    var len = response.body.observations.length;\n    var rateFromBank = response.body.observations[len - 1]['FX' + currencyFrom + currencyTo].v;\n    cy.log(\"rate from bank: \" + currencyFrom + \" to \" + currencyTo + \": \" + rateFromBank);\n    rateFromBank = parseFloat(rateFromBank.replace(\",\", \".\"));\n    rateFromGoogle = parseFloat(rateFromGoogle.text().replace(\",\", \".\"));\n    var diff = Math.abs(rateFromBank - rateFromGoogle);\n    var diffPerc = diff * 100.0 / Math.max(rateFromBank, rateFromGoogle);\n    cy.log(\"Difference for \" + currencyFrom + \" to \" + currencyTo + \" is \" + diff + \", what is \" + diffPerc + \"%\");\n    expect(diffPerc).to.be.lessThan(1);\n  });\n});",
              "err": {},
              "uuid": "ec48d6f6-96a3-48c5-827d-1c38958e589c",
              "parentUUID": "001887ca-1625-4896-b3d8-1a5e9dd6200f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "from CAD to JPY",
              "fullTitle": "google a currency rate and compare with rate from the bank of Canada [2] from CAD to JPY",
              "timedOut": null,
              "duration": 3819,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_GooglePage.onGooglePage.search(\"rate \" + currencyFrom + \" to \" + currencyTo);\n_GooglePage.onGooglePage.getCurrencyConverterArea().should('be.visible');\n_GooglePage.onGooglePage.getCurrencyConverterArea().find('div').eq(2).find('span').eq(0).then(rateFromGoogle => {\n  cy.log('rate from Google: ' + currencyFrom + \" to \" + currencyTo + \": \" + rateFromGoogle.text());\n  cy.request('GET', Cypress.env('rateAPI').replace(\"{FROMTO}\", currencyFrom + currencyTo)).then(response => {\n    expect(response.status).to.eq(200);\n    var len = response.body.observations.length;\n    var rateFromBank = response.body.observations[len - 1]['FX' + currencyFrom + currencyTo].v;\n    cy.log(\"rate from bank: \" + currencyFrom + \" to \" + currencyTo + \": \" + rateFromBank);\n    rateFromBank = parseFloat(rateFromBank.replace(\",\", \".\"));\n    rateFromGoogle = parseFloat(rateFromGoogle.text().replace(\",\", \".\"));\n    var diff = Math.abs(rateFromBank - rateFromGoogle);\n    var diffPerc = diff * 100.0 / Math.max(rateFromBank, rateFromGoogle);\n    cy.log(\"Difference for \" + currencyFrom + \" to \" + currencyTo + \" is \" + diff + \", what is \" + diffPerc + \"%\");\n    expect(diffPerc).to.be.lessThan(1);\n  });\n});",
              "err": {},
              "uuid": "987646e6-1da8-4e21-9754-9b5331fc65bb",
              "parentUUID": "001887ca-1625-4896-b3d8-1a5e9dd6200f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "075f760b-b0f3-4866-8686-68905cfbe06a",
            "ec48d6f6-96a3-48c5-827d-1c38958e589c",
            "987646e6-1da8-4e21-9754-9b5331fc65bb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13753,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c206d527-ea41-46d7-a6ca-95a5dd0827a7",
      "title": "",
      "fullFile": "cypress/integration/compareRateFromGoogleAndBank1.spec.js",
      "file": "cypress/integration/compareRateFromGoogleAndBank1.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e9cce177-b27e-4904-8dcb-0572eabdb3ac",
          "title": "google a currency rate and compare with rate from the bank of Canada [1]",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "from CAD to USD",
              "fullTitle": "google a currency rate and compare with rate from the bank of Canada [1] from CAD to USD",
              "timedOut": null,
              "duration": 5736,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_GooglePage.onGooglePage.search(\"rate \" + currencyFrom + \" to \" + currencyTo);\n_GooglePage.onGooglePage.getCurrencyConverterArea().should('be.visible');\n_GooglePage.onGooglePage.getCurrencyConverterArea().find('div').eq(2).find('span').eq(0).then(rateFromGoogle => {\n  cy.log('rate from Google: ' + currencyFrom + \" to \" + currencyTo + \": \" + rateFromGoogle.text());\n  cy.request('GET', Cypress.env('rateAPI').replace(\"{FROMTO}\", currencyFrom + currencyTo)).then(response => {\n    expect(response.status).to.eq(200);\n    var len = response.body.observations.length;\n    var rateFromBank = response.body.observations[len - 1]['FX' + currencyFrom + currencyTo].v;\n    cy.log(\"rate from bank: \" + currencyFrom + \" to \" + currencyTo + \": \" + rateFromBank);\n    rateFromBank = parseFloat(rateFromBank.replace(\",\", \".\"));\n    rateFromGoogle = parseFloat(rateFromGoogle.text().replace(\",\", \".\"));\n    var diff = Math.abs(rateFromBank - rateFromGoogle);\n    var diffPerc = diff * 100.0 / Math.max(rateFromBank, rateFromGoogle);\n    cy.log(\"Difference for \" + currencyFrom + \" to \" + currencyTo + \" is \" + diff + \", what is \" + diffPerc + \"%\");\n    expect(diffPerc).to.be.lessThan(1);\n  });\n});",
              "err": {},
              "uuid": "d18e69d4-78ee-42dc-b240-2e2390af8bce",
              "parentUUID": "e9cce177-b27e-4904-8dcb-0572eabdb3ac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "from CAD to EUR",
              "fullTitle": "google a currency rate and compare with rate from the bank of Canada [1] from CAD to EUR",
              "timedOut": null,
              "duration": 3821,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_GooglePage.onGooglePage.search(\"rate \" + currencyFrom + \" to \" + currencyTo);\n_GooglePage.onGooglePage.getCurrencyConverterArea().should('be.visible');\n_GooglePage.onGooglePage.getCurrencyConverterArea().find('div').eq(2).find('span').eq(0).then(rateFromGoogle => {\n  cy.log('rate from Google: ' + currencyFrom + \" to \" + currencyTo + \": \" + rateFromGoogle.text());\n  cy.request('GET', Cypress.env('rateAPI').replace(\"{FROMTO}\", currencyFrom + currencyTo)).then(response => {\n    expect(response.status).to.eq(200);\n    var len = response.body.observations.length;\n    var rateFromBank = response.body.observations[len - 1]['FX' + currencyFrom + currencyTo].v;\n    cy.log(\"rate from bank: \" + currencyFrom + \" to \" + currencyTo + \": \" + rateFromBank);\n    rateFromBank = parseFloat(rateFromBank.replace(\",\", \".\"));\n    rateFromGoogle = parseFloat(rateFromGoogle.text().replace(\",\", \".\"));\n    var diff = Math.abs(rateFromBank - rateFromGoogle);\n    var diffPerc = diff * 100.0 / Math.max(rateFromBank, rateFromGoogle);\n    cy.log(\"Difference for \" + currencyFrom + \" to \" + currencyTo + \" is \" + diff + \", what is \" + diffPerc + \"%\");\n    expect(diffPerc).to.be.lessThan(1);\n  });\n});",
              "err": {},
              "uuid": "403fa751-0118-479d-a2bc-01779ad1735b",
              "parentUUID": "e9cce177-b27e-4904-8dcb-0572eabdb3ac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "from CAD to RUB",
              "fullTitle": "google a currency rate and compare with rate from the bank of Canada [1] from CAD to RUB",
              "timedOut": null,
              "duration": 3740,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_GooglePage.onGooglePage.search(\"rate \" + currencyFrom + \" to \" + currencyTo);\n_GooglePage.onGooglePage.getCurrencyConverterArea().should('be.visible');\n_GooglePage.onGooglePage.getCurrencyConverterArea().find('div').eq(2).find('span').eq(0).then(rateFromGoogle => {\n  cy.log('rate from Google: ' + currencyFrom + \" to \" + currencyTo + \": \" + rateFromGoogle.text());\n  cy.request('GET', Cypress.env('rateAPI').replace(\"{FROMTO}\", currencyFrom + currencyTo)).then(response => {\n    expect(response.status).to.eq(200);\n    var len = response.body.observations.length;\n    var rateFromBank = response.body.observations[len - 1]['FX' + currencyFrom + currencyTo].v;\n    cy.log(\"rate from bank: \" + currencyFrom + \" to \" + currencyTo + \": \" + rateFromBank);\n    rateFromBank = parseFloat(rateFromBank.replace(\",\", \".\"));\n    rateFromGoogle = parseFloat(rateFromGoogle.text().replace(\",\", \".\"));\n    var diff = Math.abs(rateFromBank - rateFromGoogle);\n    var diffPerc = diff * 100.0 / Math.max(rateFromBank, rateFromGoogle);\n    cy.log(\"Difference for \" + currencyFrom + \" to \" + currencyTo + \" is \" + diff + \", what is \" + diffPerc + \"%\");\n    expect(diffPerc).to.be.lessThan(1);\n  });\n});",
              "err": {},
              "uuid": "f9ee3e29-5def-4b87-b324-b76f60d1e27d",
              "parentUUID": "e9cce177-b27e-4904-8dcb-0572eabdb3ac",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d18e69d4-78ee-42dc-b240-2e2390af8bce",
            "403fa751-0118-479d-a2bc-01779ad1735b",
            "f9ee3e29-5def-4b87-b324-b76f60d1e27d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13297,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.2.0"
    }
  }
}