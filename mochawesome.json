{
  "stats": {
    "suites": 2,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2021-08-16T21:03:07.173Z",
    "end": "2021-08-16T21:03:28.340Z",
    "duration": 39795,
    "testsRegistered": 6,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "5c3c4185-703d-41ef-99ee-26f398760889",
      "title": "",
      "fullFile": "cypress/integration/compareRateFromGoogleAndBank1.spec.js",
      "file": "cypress/integration/compareRateFromGoogleAndBank1.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4b59576a-4870-4430-b81e-007da7b7cf62",
          "title": "google a currency rate and compare with rate from the bank of Canada [1]",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "from CAD to USD",
              "fullTitle": "google a currency rate and compare with rate from the bank of Canada [1] from CAD to USD",
              "timedOut": null,
              "duration": 7900,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_GooglePage.onGooglePage.search(\"rate \" + currencyFrom + \" to \" + currencyTo);\n_GooglePage.onGooglePage.getCurrencyConverterArea().should('be.visible');\n_GooglePage.onGooglePage.getCurrencyConverterArea().find('div').eq(2).find('span').eq(0).then(rateFromGoogle => {\n  cy.log('rate from Google: ' + currencyFrom + \" to \" + currencyTo + \": \" + rateFromGoogle.text());\n  cy.request('GET', Cypress.env('rateAPI').replace(\"{FROMTO}\", currencyFrom + currencyTo)).then(response => {\n    expect(response.status).to.eq(200);\n    var len = response.body.observations.length;\n    var rateFromBank = response.body.observations[len - 1]['FX' + currencyFrom + currencyTo].v;\n    cy.log(\"rate from bank: \" + currencyFrom + \" to \" + currencyTo + \": \" + rateFromBank);\n    rateFromBank = parseFloat(rateFromBank.replace(\",\", \".\"));\n    rateFromGoogle = parseFloat(rateFromGoogle.text().replace(\",\", \".\"));\n    var diff = Math.abs(rateFromBank - rateFromGoogle);\n    var diffPerc = diff * 100.0 / Math.max(rateFromBank, rateFromGoogle);\n    cy.log(\"Difference for \" + currencyFrom + \" to \" + currencyTo + \" is \" + diff + \", what is \" + diffPerc + \"%\");\n    expect(diffPerc).to.be.lessThan(1);\n  });\n});",
              "err": {},
              "uuid": "e87147d0-d491-4c8c-92b6-a24bd7979419",
              "parentUUID": "4b59576a-4870-4430-b81e-007da7b7cf62",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "from CAD to EUR",
              "fullTitle": "google a currency rate and compare with rate from the bank of Canada [1] from CAD to EUR",
              "timedOut": null,
              "duration": 6594,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_GooglePage.onGooglePage.search(\"rate \" + currencyFrom + \" to \" + currencyTo);\n_GooglePage.onGooglePage.getCurrencyConverterArea().should('be.visible');\n_GooglePage.onGooglePage.getCurrencyConverterArea().find('div').eq(2).find('span').eq(0).then(rateFromGoogle => {\n  cy.log('rate from Google: ' + currencyFrom + \" to \" + currencyTo + \": \" + rateFromGoogle.text());\n  cy.request('GET', Cypress.env('rateAPI').replace(\"{FROMTO}\", currencyFrom + currencyTo)).then(response => {\n    expect(response.status).to.eq(200);\n    var len = response.body.observations.length;\n    var rateFromBank = response.body.observations[len - 1]['FX' + currencyFrom + currencyTo].v;\n    cy.log(\"rate from bank: \" + currencyFrom + \" to \" + currencyTo + \": \" + rateFromBank);\n    rateFromBank = parseFloat(rateFromBank.replace(\",\", \".\"));\n    rateFromGoogle = parseFloat(rateFromGoogle.text().replace(\",\", \".\"));\n    var diff = Math.abs(rateFromBank - rateFromGoogle);\n    var diffPerc = diff * 100.0 / Math.max(rateFromBank, rateFromGoogle);\n    cy.log(\"Difference for \" + currencyFrom + \" to \" + currencyTo + \" is \" + diff + \", what is \" + diffPerc + \"%\");\n    expect(diffPerc).to.be.lessThan(1);\n  });\n});",
              "err": {},
              "uuid": "05109645-09c4-4d7f-8610-d31934a3a49b",
              "parentUUID": "4b59576a-4870-4430-b81e-007da7b7cf62",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "from CAD to RUB",
              "fullTitle": "google a currency rate and compare with rate from the bank of Canada [1] from CAD to RUB",
              "timedOut": null,
              "duration": 6052,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_GooglePage.onGooglePage.search(\"rate \" + currencyFrom + \" to \" + currencyTo);\n_GooglePage.onGooglePage.getCurrencyConverterArea().should('be.visible');\n_GooglePage.onGooglePage.getCurrencyConverterArea().find('div').eq(2).find('span').eq(0).then(rateFromGoogle => {\n  cy.log('rate from Google: ' + currencyFrom + \" to \" + currencyTo + \": \" + rateFromGoogle.text());\n  cy.request('GET', Cypress.env('rateAPI').replace(\"{FROMTO}\", currencyFrom + currencyTo)).then(response => {\n    expect(response.status).to.eq(200);\n    var len = response.body.observations.length;\n    var rateFromBank = response.body.observations[len - 1]['FX' + currencyFrom + currencyTo].v;\n    cy.log(\"rate from bank: \" + currencyFrom + \" to \" + currencyTo + \": \" + rateFromBank);\n    rateFromBank = parseFloat(rateFromBank.replace(\",\", \".\"));\n    rateFromGoogle = parseFloat(rateFromGoogle.text().replace(\",\", \".\"));\n    var diff = Math.abs(rateFromBank - rateFromGoogle);\n    var diffPerc = diff * 100.0 / Math.max(rateFromBank, rateFromGoogle);\n    cy.log(\"Difference for \" + currencyFrom + \" to \" + currencyTo + \" is \" + diff + \", what is \" + diffPerc + \"%\");\n    expect(diffPerc).to.be.lessThan(1);\n  });\n});",
              "err": {},
              "uuid": "eb951c56-c822-44ed-b962-df4318654b45",
              "parentUUID": "4b59576a-4870-4430-b81e-007da7b7cf62",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e87147d0-d491-4c8c-92b6-a24bd7979419",
            "05109645-09c4-4d7f-8610-d31934a3a49b",
            "eb951c56-c822-44ed-b962-df4318654b45"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 20546,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "6fa5920c-bcbe-4694-aecc-fe3b15304829",
      "title": "",
      "fullFile": "cypress/integration/compareRateFromGoogleAndBank2.spec.js",
      "file": "cypress/integration/compareRateFromGoogleAndBank2.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3e801f63-afd6-4541-9af0-dd902fe297de",
          "title": "google a currency rate and compare with rate from the bank of Canada [2]",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "from CAD to AUD",
              "fullTitle": "google a currency rate and compare with rate from the bank of Canada [2] from CAD to AUD",
              "timedOut": null,
              "duration": 7556,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_GooglePage.onGooglePage.search(\"rate \" + currencyFrom + \" to \" + currencyTo);\n_GooglePage.onGooglePage.getCurrencyConverterArea().should('be.visible');\n_GooglePage.onGooglePage.getCurrencyConverterArea().find('div').eq(2).find('span').eq(0).then(rateFromGoogle => {\n  cy.log('rate from Google: ' + currencyFrom + \" to \" + currencyTo + \": \" + rateFromGoogle.text());\n  cy.request('GET', Cypress.env('rateAPI').replace(\"{FROMTO}\", currencyFrom + currencyTo)).then(response => {\n    expect(response.status).to.eq(200);\n    var len = response.body.observations.length;\n    var rateFromBank = response.body.observations[len - 1]['FX' + currencyFrom + currencyTo].v;\n    cy.log(\"rate from bank: \" + currencyFrom + \" to \" + currencyTo + \": \" + rateFromBank);\n    rateFromBank = parseFloat(rateFromBank.replace(\",\", \".\"));\n    rateFromGoogle = parseFloat(rateFromGoogle.text().replace(\",\", \".\"));\n    var diff = Math.abs(rateFromBank - rateFromGoogle);\n    var diffPerc = diff * 100.0 / Math.max(rateFromBank, rateFromGoogle);\n    cy.log(\"Difference for \" + currencyFrom + \" to \" + currencyTo + \" is \" + diff + \", what is \" + diffPerc + \"%\");\n    expect(diffPerc).to.be.lessThan(1);\n  });\n});",
              "err": {},
              "uuid": "a7aa64d6-16de-47c6-8bcb-301a96e1c398",
              "parentUUID": "3e801f63-afd6-4541-9af0-dd902fe297de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "from CAD to BRL",
              "fullTitle": "google a currency rate and compare with rate from the bank of Canada [2] from CAD to BRL",
              "timedOut": null,
              "duration": 5510,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_GooglePage.onGooglePage.search(\"rate \" + currencyFrom + \" to \" + currencyTo);\n_GooglePage.onGooglePage.getCurrencyConverterArea().should('be.visible');\n_GooglePage.onGooglePage.getCurrencyConverterArea().find('div').eq(2).find('span').eq(0).then(rateFromGoogle => {\n  cy.log('rate from Google: ' + currencyFrom + \" to \" + currencyTo + \": \" + rateFromGoogle.text());\n  cy.request('GET', Cypress.env('rateAPI').replace(\"{FROMTO}\", currencyFrom + currencyTo)).then(response => {\n    expect(response.status).to.eq(200);\n    var len = response.body.observations.length;\n    var rateFromBank = response.body.observations[len - 1]['FX' + currencyFrom + currencyTo].v;\n    cy.log(\"rate from bank: \" + currencyFrom + \" to \" + currencyTo + \": \" + rateFromBank);\n    rateFromBank = parseFloat(rateFromBank.replace(\",\", \".\"));\n    rateFromGoogle = parseFloat(rateFromGoogle.text().replace(\",\", \".\"));\n    var diff = Math.abs(rateFromBank - rateFromGoogle);\n    var diffPerc = diff * 100.0 / Math.max(rateFromBank, rateFromGoogle);\n    cy.log(\"Difference for \" + currencyFrom + \" to \" + currencyTo + \" is \" + diff + \", what is \" + diffPerc + \"%\");\n    expect(diffPerc).to.be.lessThan(1);\n  });\n});",
              "err": {},
              "uuid": "4efe5b2e-7a41-4fef-8540-f3424b0157e1",
              "parentUUID": "3e801f63-afd6-4541-9af0-dd902fe297de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "from CAD to JPY",
              "fullTitle": "google a currency rate and compare with rate from the bank of Canada [2] from CAD to JPY",
              "timedOut": null,
              "duration": 6183,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_GooglePage.onGooglePage.search(\"rate \" + currencyFrom + \" to \" + currencyTo);\n_GooglePage.onGooglePage.getCurrencyConverterArea().should('be.visible');\n_GooglePage.onGooglePage.getCurrencyConverterArea().find('div').eq(2).find('span').eq(0).then(rateFromGoogle => {\n  cy.log('rate from Google: ' + currencyFrom + \" to \" + currencyTo + \": \" + rateFromGoogle.text());\n  cy.request('GET', Cypress.env('rateAPI').replace(\"{FROMTO}\", currencyFrom + currencyTo)).then(response => {\n    expect(response.status).to.eq(200);\n    var len = response.body.observations.length;\n    var rateFromBank = response.body.observations[len - 1]['FX' + currencyFrom + currencyTo].v;\n    cy.log(\"rate from bank: \" + currencyFrom + \" to \" + currencyTo + \": \" + rateFromBank);\n    rateFromBank = parseFloat(rateFromBank.replace(\",\", \".\"));\n    rateFromGoogle = parseFloat(rateFromGoogle.text().replace(\",\", \".\"));\n    var diff = Math.abs(rateFromBank - rateFromGoogle);\n    var diffPerc = diff * 100.0 / Math.max(rateFromBank, rateFromGoogle);\n    cy.log(\"Difference for \" + currencyFrom + \" to \" + currencyTo + \" is \" + diff + \", what is \" + diffPerc + \"%\");\n    expect(diffPerc).to.be.lessThan(1);\n  });\n});",
              "err": {},
              "uuid": "978bc159-84cd-4771-8b4c-20c78a893533",
              "parentUUID": "3e801f63-afd6-4541-9af0-dd902fe297de",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a7aa64d6-16de-47c6-8bcb-301a96e1c398",
            "4efe5b2e-7a41-4fef-8540-f3424b0157e1",
            "978bc159-84cd-4771-8b4c-20c78a893533"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 19249,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.2.0"
    }
  }
}